# This is a basic workflow to help you get started with Actions

name: build_redis_image

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    tags:
      - v*
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  REDIS_IMAGE_NAME: ${{ github.repository }}-redis
  REDIS_TEST_TAG: bzhtux/redis-app:test

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test-redis-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: install goss and dgoss to test docker images
        run: curl -fsSL https://goss.rocks/install | sh

      - name: build for test
        uses: docker/build-push-action@v3
        with:
          context: redis
          load: true
          tags: ${{ env.REDIS_TEST_TAG }}

      - name: dgoss test
        run: |
          cd redis
          dgoss run ${{ env.REDIS_TEST_TAG }}


  build-and-push-redis-image:
    # This workflow contains a single job called "build"
    # build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [test-redis-image]
    permissions:
      contents: read
      packages: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHR_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: redis
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

